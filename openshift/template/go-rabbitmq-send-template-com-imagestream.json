{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "name": "go-rabbitmq-send-template",
        "annotations": {
            "description": "Template para deploy RabbitMQ envio de mensagens",
            "iconClass": "icon-go-gopher",
            "openshift.io/display-name": "RabbitMQ envio de mensagens",
            "openshift.io/documentation-url": "https://github.com/marceloagmelo/go-rabbitmq-send.git",
            "tags": "runtime,instant-app,golang,rabbitmq"
        }
    },
    "objects": [
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "labels": {
                    "app_name": "${APP_NAME}"
                },
                "name": "${APP_NAME}",
                "annotations": {
                    "description": "Keeps track of changes in the application image"
                }
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                  "labels": {
                      "app_name": "${APP_NAME}",
                  },
                  "name": "${APP_NAME}",
                  "annotations": {
                      "description": "Defines how to build the application"
                  }
            },
            "spec": {
              "source": {
                "type": "Git",
                "git": {
                  "uri": "${SOURCE_REPOSITORY_URL}",
                  "ref": "${SOURCE_REPOSITORY_REF}"
                },
                "contextDir": "${CONTEXT_DIR}",
                "sourceSecret": {
                  "name": "git-user-secret"
                }
              },
              "strategy": {
                "type": "Docker",
                "dockerStrategy": {
                  "from": {
                    "kind": "DockerImage",
                    "name": "${IMAGE_NAME}:${IMAGE_VERSION}"
                  },
                  "env": [
                    {
                       "name": "SOURCE_REPOSITORY_URL",
                       "value": "${SOURCE_REPOSITORY_URL}"
                    },
                    {
                       "name": "SOURCE_REPOSITORY_REF",
                       "value": "${SOURCE_REPOSITORY_REF}"
                    },
                    {
                       "name": "CONTEXT_DIR",
                       "value": "${CONTEXT_DIR}"
                    }
                  ]
                }
              },
              "output": {
                "to": {
                  "kind": "ImageStreamTag",
                  "name": "${APP_NAME}:latest"
                }
              },
              "triggers": [
                {
                  "type": "ImageChange"
                },
                {
                  "type": "ConfigChange"
                },
                {
                  "type": "GitHub",
                  "github": {
                    "secret": "${GITHUB_WEBHOOK_SECRET}"
                  }
                },
                {
                  "type": "Generic",
                  "generic": {
                    "secret": "${GENERIC_WEBHOOK_SECRET}"
                  }
                }
              ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "labels": {
                    "app_name": "${APP_NAME}"
                },
                "name": "${APP_NAME}"
            },
            "spec": {
                "ports": [
                    {
                        "name": "8080-http",
                        "nodePort": 0,
                        "port": 8080,
                        "protocol": "TCP",
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentconfig": "${APP_NAME}"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Route",
            "metadata": {
                "labels": {
                    "app_name": "${APP_NAME}",
                },
                "name": "${APP_NAME}"
            },
            "spec": {
                "tls": {
                    "termination": "edge"
                },
                "to": {
                    "kind": "Service",
                    "name": "${APP_NAME}"
                },
                "port": {
                    "targetPort": "8080-http"
                }
            },
            "status": {}
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "labels": {
                    "app_name": "${APP_NAME}"
                },
                "name": "${APP_NAME}"
            },
            "spec": {
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "deploymentconfig": "${APP_NAME}"
                },
                "strategy": {
                    "resources": {},
                    "rollingParams": {
                        "intervalSeconds": 1,
                        "timeoutSeconds": 600,
                        "updatePeriodSeconds": 1,
                        "maxUnavailable": 0
                    },
                    "type": "Rolling"
                },
                "triggers": [
                    {
                      "type": "ImageChange",
                      "imageChangeParams": {
                        "automatic": true,
                        "containerNames": [
                          "${APP_NAME}"
                        ],
                        "from": { 
                          "kind": "ImageStream",
                          "name": "${APP_NAME}:latest"
                        }
                      }
                    }
                ],
                "template": {
                    "metadata": {
                        "labels": {
                            "deploymentconfig": "${APP_NAME}"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "APP_NAME",
                                        "value": "${APP_NAME}"
                                    },
                                    {
                                        "name": "PROJECT_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "TZ",
                                        "value": "America/Sao_Paulo"
                                    },
                                    {
                                        "name": "MYSQL_HOSTNAME",
                                        "value": "${MYSQL_HOSTNAME}"
                                    },
                                    {
                                        "name": "MYSQL_USER",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "database-user",
                                                "name": "${MYSQL_SECRET}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MYSQL_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "database-password",
                                                "name": "${MYSQL_SECRET}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MYSQL_PORT",
                                        "value": "${MYSQL_PORT}"
                                    },
                                    {
                                        "name": "MYSQL_DATABASE",
                                        "value": "${MYSQL_DATABASE}"
                                    },
                                    {
                                        "name": "RABBITMQ_HOSTNAME",
                                        "value": "${RABBITMQ_HOSTNAME}"
                                    },
                                    {
                                        "name": "RABBITMQ_USER",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "username",
                                                "name": "${RABBITMQ_SECRET}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "RABBITMQ_PASS",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "password",
                                                "name": "${RABBITMQ_SECRET}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "RABBITMQ_PORT",
                                        "value": "${RABBITMQ_PORT}"
                                    },
                                    {
                                        "name": "RABBITMQ_VHOST",
                                        "value": "${RABBITMQ_VHOST}"
                                    }
                                ],
                                "image": "",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "${APP_NAME}",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                  "timeoutSeconds": 1,
                                  "initialDelaySeconds": 15,
                                  "httpGet": {
                                    "path": "/",
                                    "port": 8080
                                  }
                                },
                                "livenessProbe": {
                                  "timeoutSeconds": 1,
                                  "initialDelaySeconds": 15,
                                  "httpGet": {
                                    "path": "/",
                                    "port": 8080
                                  }
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": 1,
                                        "memory": "512M"
                                    },
                                    "requests": {
                                        "cpu": "1m",
                                        "memory": "256M"
                                    }
                                },
                                "securityContext": {
                                    "capabilities": {},
                                    "privileged": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/opt/metadata",
                                        "name": "podinfo",
                                        "readOnly": false
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "restartPolicy": "Always",
                        "volumes": [
                            {
                                "metadata": {
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "fieldPath": "metadata.labels"
                                            },
                                            "name": "labels"
                                        },
                                        {
                                            "fieldRef": {
                                                "fieldPath": "metadata.annotations"
                                            },
                                            "name": "annotations"
                                        }
                                    ]
                                },
                                "name": "podinfo"
                            }
                        ]
                    }
                }
            },
            "status": {}
        }
    ],
    "parameters": [
        {
            "name": "APP_NAME",
            "displayName": "Nome da aplicação",
            "description": "Nome da aplicação",
            "required": true,
            "value": "go-rabbitmq-send"
        },
        {
            "name": "SOURCE_REPOSITORY_URL",
            "displayName": "Git Repository URL",
            "description": "The URL of the repository with your application source code.",
            "value": "https://GIT_HOST/GIT_GROUP/GIT_PROJECT.git"
        },
        {
        "name": "SOURCE_REPOSITORY_REF",
        "displayName": "Git Reference",
        "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
        },
        {
        "name": "CONTEXT_DIR",
        "displayName": "Context Directory",
        "description": "Set this to the relative path to your project if it is not in the root of your repository.",
        "value": ""
        },
        {
        "name": "GITHUB_WEBHOOK_SECRET",
        "displayName": "GitHub Webhook Secret",
        "description": "A secret string used to configure the GitHub webhook.",
        "generate": "expression",
        "from": "[a-zA-Z0-9]{40}"
        },
        {
        "name": "GENERIC_WEBHOOK_SECRET",
        "displayName": "Generic Webhook Secret",
        "description": "A secret string used to configure the Generic webhook.",
        "generate": "expression",
        "from": "[a-zA-Z0-9]{40}"
        },
        {
            "name": "IMAGE_NAME",
            "displayName": "Image Name",
            "description": "Image name",
            "value": "golang",
            "required": true
        },
        {
            "name": "IMAGE_VERSION",
            "displayName": "Image tag",
            "description": "Image tag",
            "value": "1.13.6",
            "required": true
        },
        {
            "name": "MYSQL_HOSTNAME",
            "displayName": "Nome do serviço do mysql",
            "description": "Nome do serviço do mysql",
            "value": "mysqldb",
            "required": true
        },
        {
            "name": "MYSQL_SECRET",
            "displayName": "Secret do mysql",
            "description": "Secret do mysql",
            "value": "secret-db-mysqldb",
            "required": true
        },
        {
            "name": "MYSQL_PORT",
            "displayName": "Porta do banco de dados",
            "description": "Porta do banco de dados",
            "value": "3306",
            "required": true
        },
        {
            "name": "MYSQL_DATABASE",
            "displayName": "Nome do banco de dados",
            "description": "Nome do banco de dados",
            "value": "mysqlsampledb",
            "required": true
        },
        {
            "displayName": "Nome do serviço do rabbitmq",
            "description": "Nome do serviço do rabbitmq",
            "name": "RABBITMQ_HOSTNAME",
            "value": "rabbitmq",
            "required": true
        },
        {
            "description": "Secret do rabbitmq",
            "displayName": "Secret do rabbitmq",
            "name": "RABBITMQ_SECRET",
            "value": "rabbitmq-secret"
        },
        {
            "name": "RABBITMQ_PORT",
            "displayName": "Porta do rabbitmq",
            "description": "Porta do rabbitmq",
            "value": "5672",
            "required": true
        },
        {
            "displayName": "VHost",
            "description": "VHost",
            "name": "RABBITMQ_VHOST",
            "value": "/"
        }
    ],
    "labels": {
        "template": "go-rabbitmq-send-template"
    }
}
